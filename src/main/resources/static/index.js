var app = angular.module('tamarindModule', ['ngRoute', 'controllers','ngSanitize', 'ui.bootstrap']);
/* sessionTimeoutInterceptor will intercept default login page generated by spring 
 * and redirects to '/login' page of AngularJS.
 */ 
app.factory("sessionTimeoutInterceptor", ["$q", "$window", "$log",
  function ($q, $window, $log) {
    return {
     "response": function (response) {
        var responseHeaders;
        responseHeaders = response.headers();
        
        if (responseHeaders
        	&& responseHeaders["content-type"]
        	&& responseHeaders["content-type"].indexOf("text/html") !== -1 
        	&& response.data
        	&& response.data.indexOf('<h3>Login with Username and Password</h3>') !== -1) {
        	/* Spring generated login page contains '<h3>Login with Username and Password</h3>', so if response data
        	 * contains the above <h3> message, redirect to '/login' of AngularJS. 
        	 */
        		var urlParts = document.location.href.split("/");
            	window.location = "/" + urlParts[3] + "/#/login";
            	alert('login invoked');
        }
        
        return response;
      }
    };
 }
])

function qppRouteConfig($routeProvider, $httpProvider) {

    $routeProvider.
    	when('/login', {
        	controller: 'LoginController',
        	templateUrl: 'login/login.html'
        }).
    	when('/', {
            controller: 'HomeController',
            templateUrl: 'home/home.html'
        }).
        otherwise({
            redirectTo: '/'
        });
    
    $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
    $httpProvider.interceptors.push('sessionTimeoutInterceptor');
    //$httpProvider.defaults.headers.get['Cache-Control'] = 'no-cache';
    //$httpProvider.defaults.headers.get['Pragma'] = 'no-cache';
}

app.config(qppRouteConfig);

var controllers = angular.module('controllers', ['checklist-model']);

controllers.controller('HomeController', ['$rootScope', '$scope', '$http', '$location', '$route', '$anchorScroll',
    function ($rootScope, $scope, $http, $location, $route, $anchorScroll) {
		$anchorScroll();
     }]);

controllers.controller('LoginController', ['$rootScope','$scope', '$http', '$location',
                                           function ($rootScope, $scope, $http, $location) {
	$scope.credentials = {};
	$scope.error = [{show:false}, {message:''}];
	$rootScope.authenticated = false;
	$scope.login = function() {		
		$http({
			method: 'POST',
			url: 'qpplogin',
			data: $scope.credentials
		}).then(function(response){
			if(''==response.data) {
				$scope.error.show = true;
				$scope.error.message = 'There was a problem logging in. Please try again.';
			} else {
				$rootScope.authenticated = true;
				$rootScope.qppsessionid = response.data.sessionId;
			}
		});
	};
 }]);







